package server

type Person struct {
	Name string
}

templ headerComponent() {
	<header
		class="text-blue-500 p-4 mb-4 rounded-b-lg flex flex-row gap-4 sm:mx-8 min-w-80 md:max-w- border-b-2 border-blue-200 overflow-hidden"
	>
		<h1 class="font-bold flex-grow min-w-fit">
			<a href="/">Welcome to InterinGo language</a>
		</h1>
		<a
			class="hidden sm:block sm:text-blue-500 sm:underline flex-shrink"
			href="https://github.com/nghiango1/hello/blob/main/go/interpreter/README.md"
		>Docs</a>
		<a
			class="hidden sm:block sm:text-blue-500 sm:underline flex-shrink"
			href="https://github.com/nghiango1/hello/tree/main/go/interpreter"
		>Source code</a>
	</header>
}

templ infoComponent() {
	<div class="sm:flex sm:items-center">
		<img
			class="rounded-full hidden sm:block sm:w-28 sm:h-28"
			src="https://avatars.githubusercontent.com/u/31164703?s=400&u=19b089be1581b00a69f9b0890ec97e8d5e86f83f&v=4"
			alt="@nghiango1"
		/>
		<div class="max-h-80 sm:p-4">
			<h2 class="font-bold">Nghia Ngo</h2>
			<p class="text-gray-700 max-w-48">Actually have 10 year of codding experience</p>
			<a class="text-blue-500 underline" href="https://github.com/nghiango1">Github</a>
			<a class="text-blue-500 underline" href="https://www.linkedin.com/in/nghia-ngo-duc">Linkedin</a>
		</div>
	</div>
}

templ footerComponent() {
	<footer class="m-8 pt-2 sm:pt-8 flex flex-col sm:flex-row-reverse gap-4 border-t-blue-200 border-t-2">
		<div class="flex flex-col sm:text-right sm:ml-auto">
			<h2 class="font-bold">Menu</h2>
			<a class="text-blue-500 underline" href="/">home</a>
			<a class="text-blue-500 underline" href="/info">about us</a>
			<a class="text-blue-500 underline" href="/404">404</a>
		</div>
		@infoComponent()
	</footer>
}

// HTML barebone page template
templ pageTemplate() {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<meta http-equiv="X-UA-Compatible" content="ie=edge"/>
			<title>InterinGo language</title>
			<link rel="stylesheet" href="/assets/stylesheet.css"/>
			<link rel="icon" href="./favicon.ico" type="image/x-icon"/>
			<script src="/assets/htmx.min.js"></script>
			<script src="/assets/custom.js"></script>
		</head>
		<body class="h-full w-full min-w-80 scrollbar">
			@headerComponent()
			<main class="p-4 flex flex-col gap-4 max-w-3xl sm:mx-8 md:mx-auto">
				{ children... }
			</main>
			@footerComponent()
		</body>
	</html>
}

// Output component that used for rendering REPL output being sent
// from the server
templ outputComponent() {
	<div class="rounded-t-lg border-blue-500 border-2 overflow-hidden">
		<div class="bg-blue-200 flex p-1 border-b-2 border-blue-500">
			<h2 class="block flex-1">Command-promt window </h2>
			<div class="block">
				<input id="wrap" class="peer" type="checkbox" name="wrap" oninput="updateWrap()"/>
				<label for="wrap" class="peer-checked:font-bold">Wrap</label>
			</div>
		</div>
		<input id="hiddenwrap" class="hidden peer/wrap" type="checkbox" name="wrap"/>
		<code
			id="repl-output"
			class="outline-blue-200 p-2 rounded-lg h-56 whitespace-pre peer-checked/wrap:whitespace-pre-wrap flex overflow-auto scrollbar"
			hx-on:htmx:after-swap="scrollBottom()"
		>
			Let start with help() command { "\n"}
		</code>
	</div>
}

// Input component that user can use in UI to enter InterinGo code
// - input `repl-input` contain the code line
// - Button that used for sending user input code to server
// which then being evaluated and update REPLOutputComponent
// TODO: Using a better UI component with REACT?
templ inputComponent() {
	<p>Promt next command:</p>
	<form
		class="flex flex-row gap-4 outline-blue-200 rounded-lg h-fit"
		hx-post="/api/evaluate"
		hx-target="#repl-output"
		hx-swap="beforeend"
		hx-on:htmx:config-request="addCommand()"
	>
		<input
			class="flex-1 font-mono focus:outline-none border-b border-gray-500 focus:border-b-2 focus:border-blue-500"
			type="text"
			name="repl-input"
			aria-autocomplete="both"
			aria-labelledby="docsearch-label"
			id="repl-input"
			autocomplete="off"
			autocorrect="off"
			autocapitalize="off"
			enterkeyhint="go"
			spellcheck="false"
			placeholder="help()"
		/>
		<button class="block rounded-lg bg-blue-500 text-white p-2" id="repl-send" type="Summit" click="addCommand()">
			Run
		</button>
	</form>
}

templ evaluateComponent() {
	@outputComponent()
	@inputComponent()
}

// Fragement - A fragment can be use for HTMX swap - which isn't need fullpage reload
templ HomeFragment() {
	@evaluateComponent()
}

templ InfoFragment() {
	<p>This website was made for testing InterinGo language</p>
}

// Page - Full page
templ Home() {
	@pageTemplate() {
		@HomeFragment()
	}
}

templ Info() {
	@pageTemplate() {
		@InfoFragment()
	}
}

templ NotFound() {
	@pageTemplate() {
		<div>404 NOT FOUND PAGE</div>
	}
}
